20. SELECT maker, count(model) AS Count_Model
FROM product where type = 'pc' group by maker
having count(model) >= 3

21. SELECT product.maker, max(pc.price)
FROM product, pc
WHERE product.model = pc.model
AND product.type = 'PC'
group by product.maker

22. SELECT speed, AVG(price) AS Avg_speed
FROM PC
WHERE speed > 600
GROUP BY speed

23. SELECT DISTINCT maker FROM PC inner join product
on pc.model = product.model
WHERE pc.speed >= 750 and maker in(select maker
FROM laptop inner join product on laptop.model =
product.model where laptop.speed >=750)

24. 

25. SELECT DISTINCT maker FROM product WHERE model IN (SELECT model
FROM pc
WHERE ram = (SELECT MIN (ram) FROM pc)
AND speed = (SELECT MAX(speed) FROM pc
WHERE ram = (SELECT MIN(ram)FROM pc)
)
)
AND maker IN (SELECT maker
FROM product
WHERE type='printer'
)

26. SELECT sum(s.price)/sum(s.kol) as sredn FROM
(SELECT price,1 as kol FROM pc,product
WHERE pc.model=product.model AND product.maker = 'A'
UNION all
SELECT price,1 as kol FROM laptop,product
WHERE laptop.model=product.model AND product.maker = 'A') as s

27. SELECT maker, avg(hd) from product inner join pc
on product.model = pc.model
WHERE maker in(select maker from product where type = 'printer')
group by maker

28. SELECT count(maker)
FROM product
WHERE maker in
(
SELECT maker from product
GROUP BY maker
HAVING COUNT(model) = 1
)

29. SELECT Income_o.point, Income_o.date, SUM(inc),SUM(out)
FROM Income_o LEFT JOIN
Outcome_o ON Income_o.point = Outcome_o.point AND
Income_o.date = Outcome_o.date
GROUP BY Income_o.point, Income_o.date
UNION
SELECT Outcome_o.point, Outcome_o.date, SUM(inc),SUM(out)
FROM Outcome_o LEFT JOIN
Income_o ON Income_o.point = Outcome_o.point AND
Income_o.date = Outcome_o.date
GROUP BY Outcome_o.point, Outcome_o.date

30. SELECT DISTINCT point,date,SUM(out) AS out, SUM(inc) AS inc FROM (
SELECT Income.point, Income.date, out, inc
FROM Income LEFT JOIN
Outcome ON Income.point = Outcome.point AND
Income.date = Outcome.date AND Income.code= Outcome.code
UNION ALL
SELECT Outcome.point, Outcome.date, out, inc
FROM Outcome LEFT JOIN
Income ON Income.point = Outcome.point AND
Income.date = Outcome.date AND Income.code=Outcome.code) AS t1
GROUP BY point, date

31. SELECT class, country
FROM Classes
WHERE bore >= 16

32. SELECT country, CAST(AVG(POWER(bore, 3) / 2) AS DECIMAL(6,2)) weight FROM(
SELECT country, bore, name FROM classes JOIN ships ON classes.class = ships.class
UNION
SELECT country, bore, ship FROM classes JOIN outcomes on class = ship WHERE
ship NOT IN (SELECT name FROM ships)
)this_table GROUP BY country

33. SELECT ship
FROM Outcomes
WHERE battle = 'North Atlantic'
AND result = 'sunk'

34. SELECT name
FROM Ships, Classes
WHERE launched >= 1922
AND displacement > 35000
AND Classes.class = Ships.class
AND type = 'bb'

35. SELECT model, type
FROM product
WHERE upper(model) NOT like '%[^A-Z]%'
OR model not like '%[^0-9]%'

36. SELECT name
FROM ships
WHERE class = name
UNION
SELECT ship as name FROM classes,outcomes where classes.class = outcomes.ship

37. SELECT c.class
FROM classes c
LEFT JOIN (
SELECT class, name
FROM ships
UNION
SELECT ship, ship
FROM outcomes
) AS s ON s.class = c.class
GROUP BY c.class
HAVING COUNT(s.name) = 1

38. SELECT country
FROM classes
GROUP BY country
HAVING COUNT(distinct type) = 2

39. SELECT DISTINCT ship FROM(
SELECT ship, result, date FROM outcomes
JOIN battles bat ON battle = name WHERE result = 'damaged' AND ship IN(
SELECT ship FROM outcomes
JOIN battles ON battle = name WHERE bat.date < battles.date))this_table

40. SELECT maker, type FROM product WHERE maker IN(
SELECT maker FROM(
SELECT maker, type FROM product
GROUP BY maker, type) this_table
GROUP BY maker HAVING COUNT (*) = 1)
GROUP BY maker, type HAVING COUNT(*) > 1